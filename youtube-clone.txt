import React from 'react';
import { Box, CardContent, CardMedia, Typography } from '@mui/material';
import CheckCircleIcon from '@mui/icons-material/CheckCircle';
import { Link } from 'react-router-dom';
import { demoProfilePicture } from '../utils/constants';

const ChannelCard = ({ channelDetail, marginTop }) => (
    <Box
        sx={{
            boxShadow: 'none',
            borderRadius: '20px',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            width: { xs: '356px', md: '320px' },
            height: '326px',
            margin: 'auto',
            marginTop,
        }}
    >
        <Link to={`/channel/${channelDetail?.id?.channelId}`}>
            <CardContent sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', textAlign: 'center', color: '#fff' }}>
                <CardMedia
                    image={channelDetail?.snippet?.thumbnails?.high?.url || demoProfilePicture}
                    alt={channelDetail?.snippet?.title}
                    sx={{ borderRadius: '50%', height: '180px', width: '180px', mb: 2, border: '1px solid #e3e3e3' }}
                />
                <Typography variant="h6">
                    {channelDetail?.snippet?.title}{' '}
                    <CheckCircleIcon sx={{ fontSize: '14px', color: 'gray', ml: '5px' }} />
                </Typography>
                {channelDetail?.statistics?.subscriberCount && (
                    <Typography sx={{ fontSize: '15px', fontWeight: 500, color: 'gray' }}>
                        {parseInt(channelDetail?.statistics?.subscriberCount).toLocaleString('en-US')} Subscribers
                    </Typography>
                )}
            </CardContent>
        </Link>
    </Box>
);

export default ChannelCard;
import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import { Box } from "@mui/material";


import {fetchFromAPI} from "../utils/fetchFormAPI";
import Videos from "./Videos";
import ChannelCard from "./ChannelCard";

const ChannelDetail = () => {
    const [channelDetail, setChannelDetail] = useState();
    const [videos, setVideos] = useState(null);

    const { id } = useParams();

    useEffect(() => {
        const fetchResults = async () => {
            const data = await fetchFromAPI(`channels?part=snippet&id=${id}`);

            setChannelDetail(data?.items[0]);

            const videosData = await fetchFromAPI(`search?channelId=${id}&part=snippet%2Cid&order=date`);

            setVideos(videosData?.items);
        };

        fetchResults();
    }, [id]);

    return (
        <Box minHeight="95vh">
            <Box>
                <div style={{
                    height:'300px',
                    background: 'linear-gradient(90deg, rgba(0,238,247,1) 0%, rgba(206,3,184,1) 100%, rgba(0,212,255,1) 100%)',
                    zIndex: 10,
                }} />
                <ChannelCard channelDetail={channelDetail} marginTop="-93px" />
            </Box>
            <Box p={2} display="flex">
                <Box sx={{ mr: { sm: '100px' } }}/>
                <Videos videos={videos} />
            </Box>
        </Box>
    );
};

export default ChannelDetail;import React, {useEffect, useState} from "react";
import {Stack, Box, Typography} from "@mui/material";
import SideBar from "./SideBar";
import Videos from "./Videos";
import {fetchFromAPI} from "../utils/fetchFormAPI";
export default function Feed() {

    const [selectedCategory, setSelectedCategory] = useState("New");
    const [vidoes, setVidoes] = useState();


    useEffect(() => {
        setVidoes(null);
        fetchFromAPI(`search?part=snippet&q=${selectedCategory}`)
            .then((data) => setVidoes(data.items))
    }, [selectedCategory]);

    console.log(vidoes);
    return (

        <Stack
            sx={{
                flexDirection: {
                    sx: 'column',
                    md: 'row'
                }
            }}
        >
            <Box
                sx={{
                    height: {
                        sx: 'auto',
                        md: '92vh'
                    },
                    borderRight: '1px solid #3d3d3d',
                    px: {sx: 0, md: 2}
                }}
            >
                <SideBar selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory}/>
            </Box>
            <Box
                sx={{
                    overflowY: 'auto',
                    height: '90vh',
                    flex: 2,

                }}
            >
                <Typography>{selectedCategory}</Typography>
                <Videos videos={vidoes}/>
            </Box>
        </Stack>
    );
}import React from 'react';
import { Box, CircularProgress, Stack } from '@mui/material';

const Loader = () =>  (
    <Box minHeight="95vh">
        <Stack direction='row' justifyContent='center' alignItems='center' height='80vh' >
            <CircularProgress />
        </Stack>
    </Box>
);

export default Loader;import React from "react";
import {Stack, Typography } from "@mui/material";
import {Link} from "react-router-dom";
import {logo} from '../utils/constants';
import SearchBar from "./SearchBar";

export default function Navbar() {
    return (
        <Stack direction="row" alignItems="center" p={2}
               sx={{position: "sticky", background: '#000', top: 0, justifyContent: "space-between"}}>
            <Link to="/" style={{display: "flex", alignItems: "center"}}>
                <img src={logo} alt="logo" height={45}/>
                <Typography sx={{color:'white', marginLeft:'3px'}} variant='h6'>
                    YoutubeClone
                </Typography>
            </Link>
            <SearchBar/>
        </Stack>
    );
}import React, {useState} from 'react';
import {IconButton, Paper} from "@mui/material";
import SearchIcon from '@mui/icons-material/Search';
import {useNavigate} from "react-router-dom";
function SearchBar(props) {
    const [searchTerm, setSearchTerm] = useState();
    const navigate = useNavigate();
    const onhandleSubmit = (e) => {
        e.preventDefault();

        if(searchTerm) {
            navigate(`search/${searchTerm}`);
        }

        setSearchTerm('');
    }

    return (
        <Paper
            component='form'
            onSubmit={onhandleSubmit}
            sx={{
                borderRadius:'30',
                border:'1px solid #e3e3e3',
                pl:2,
                boxShadow:'none',
                mr:{sm:5}
            }}
        >
            <input
                className='search-bar'
                placeholder='Search...'
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
            />
            <IconButton type='submit' sx={{ p: '10px', color: 'red' }} aria-label='search'>
                <SearchIcon />
            </IconButton>

        </Paper>
    );
}

export default SearchBar;import { useState, useEffect } from "react";
import { Typography, Box } from "@mui/material";
import { useParams } from "react-router-dom";

import {fetchFromAPI} from "../utils/fetchFormAPI";
import Videos from "./Videos";


const SearchFeed = () => {
    const [videos, setVideos] = useState(null);
    const { searchTerm } = useParams();

    useEffect(() => {
        fetchFromAPI(`search?part=snippet&q=${searchTerm}`)
            .then((data) => setVideos(data.items))
    }, [searchTerm]);

    return (
        <Box p={2} minHeight="95vh">
            <Typography variant="h4" fontWeight={900}  color="white" mb={3} ml={{ sm: "100px"}}>
                Search Results for <span style={{ color: "#FC1503" }}>{searchTerm}</span> videos
            </Typography>
            <Box display="flex">
                <Box sx={{ mr: { sm: '100px' } }}/>
                {<Videos videos={videos} />}
            </Box>
        </Box>
    );
};

export default SearchFeed;import React from 'react';
import {Stack} from "@mui/material";
import {categories} from "../utils/constants";

function SideBar({selectedCategory, setSelectedCategory}) {
    return (
            <Stack
                direction="row"
                sx={{
                    overflowY: "auto",
                    height: { sx: "auto", md: "95%" },
                    flexDirection: { md: "column" },
                }}
            >
            {categories.map((category) => (
                <button
                    className="category-btn"
                    onClick={() => setSelectedCategory(category.name)}
                    style={{
                        background: category.name === selectedCategory && "#FC1503",
                        color: "white"
                    }}
                    key={category.name}
                >
                    <span style={{color: category.name === selectedCategory ? "white" : "red", marginRight: "15px"}}>
                        {category.icon}
                    </span>
                    <span style={{opacity: category.name === selectedCategory ? "1" : "0.8"}}>
                        {category.name}
                    </span>
                </button>
            ))}
            </Stack>
    );
}

export default SideBar;import React from 'react'
import { Link } from "react-router-dom";
import { Typography, Card, CardContent, CardMedia } from "@mui/material";
import CheckCircleIcon from "@mui/icons-material/CheckCircle";

import { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from "../utils/constants";

const VideoCard = ({ video: { id: { videoId }, snippet } }) => (
    <Card sx={{ width: { xs: '100%', sm: '358px', md: "320px", }, boxShadow: "none", borderRadius: 0 }}>
        <Link to={videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY` }>
            <CardMedia image={snippet?.thumbnails?.high?.url || demoThumbnailUrl} alt={snippet?.title}
                       sx={{ width: { xs: '100%', sm: '358px'}, height: 180 }}
            />
        </Link>
        <CardContent sx={{ backgroundColor: "#1E1E1E", height: '106px' }}>
            <Link to={videoId ? `/video/${videoId}` : demoVideoUrl } >
                <Typography variant="subtitle1" fontWeight="bold" color="#FFF">
                    {snippet?.title.slice(0, 60) || demoVideoTitle.slice(0, 60)}
                </Typography>
            </Link>
            <Link to={snippet?.channelId ? `/channel/${snippet?.channelId}` : demoChannelUrl} >
                <Typography variant="subtitle2" color="gray">
                    {snippet?.channelTitle || demoChannelTitle}
                    <CheckCircleIcon sx={{ fontSize: "12px", color: "gray", ml: "5px" }} />
                </Typography>
            </Link>
        </CardContent>
    </Card>
);

export default VideoCardimport React, { useEffect, useState } from "react";
import { Link, useParams } from "react-router-dom";
import ReactPlayer from "react-player";
import { Typography, Box, Stack } from "@mui/material";
import CheckCircleIcon from "@mui/icons-material/CheckCircle";


import {fetchFromAPI} from "../utils/fetchFormAPI";
import Videos from "./Videos";
import Loader from "./Loader";

const VideoDetail = () => {
    const [videoDetail, setVideoDetail] = useState(null);
    const [videos, setVideos] = useState(null);
    const { id } = useParams();

    useEffect(() => {
        fetchFromAPI(`videos?part=snippet,statistics&id=${id}`)
            .then((data) => setVideoDetail(data.items[0]))

        fetchFromAPI(`search?part=snippet&relatedToVideoId=${id}&type=video`)
            .then((data) => setVideos(data.items))
    }, [id]);

    console.log(videos + videoDetail)
    if(!videoDetail?.snippet) return <Loader />;

    const { snippet: { title, channelId, channelTitle }, statistics: { viewCount, likeCount } } = videoDetail;

    return (
        <Box minHeight="95vh">
            <Stack direction={{ xs: "column", md: "row" }}>
                <Box flex={1}>
                    <Box sx={{ width: "100%", position: "sticky", top: "86px" }}>
                        <ReactPlayer url={`https://www.youtube.com/watch?v=${id}`} className="react-player" controls />
                        <Typography color="#fff" variant="h5" fontWeight="bold" p={2}>
                            {title}
                        </Typography>
                        <Stack direction="row" justifyContent="space-between" sx={{ color: "#fff" }} py={1} px={2} >
                            <Link to={`/channel/${channelId}`}>
                                <Typography variant={{ sm: "subtitle1", md: 'h6' }}  color="#fff" >
                                    {channelTitle}
                                    <CheckCircleIcon sx={{ fontSize: "12px", color: "gray", ml: "5px" }} />
                                </Typography>
                            </Link>
                            <Stack direction="row" gap="20px" alignItems="center">
                                <Typography variant="body1" sx={{ opacity: 0.7 }}>
                                    {parseInt(viewCount).toLocaleString()} views
                                </Typography>
                                <Typography variant="body1" sx={{ opacity: 0.7 }}>
                                    {parseInt(likeCount).toLocaleString()} likes
                                </Typography>
                            </Stack>
                        </Stack>
                    </Box>
                </Box>
                <Box px={2} py={{ md: 1, xs: 5 }} justifyContent="center" alignItems="center" >
                    <Videos videos={videos} direction="column" />
                </Box>
            </Stack>
        </Box>
    );
};

export default VideoDetail;import React from 'react';
import {Stack, Box} from '@mui/material'
import VideoCard from "./VideoCard";
import Loader from "./Loader";
import ChannelCard from "./ChannelCard";
function Videos({videos, direction}) {

    if(!videos?.length) {
        return <Loader />
    }
    return (
        <Stack direction={direction || "row"} flexWrap="wrap" justifyContent="start" alignItems="start" gap={2}>
            {videos.map((item, idx) => (
                <Box key={idx}>
                    {item.id.videoId && <VideoCard video={item} /> }
                    {item.id.channelId && <ChannelCard channelDetail={item} />}
                </Box>
            ))}
        </Stack>
    );
}

export default Videos;import MusicNoteIcon from '@mui/icons-material/MusicNote';
import HomeIcon from '@mui/icons-material/Home';
import CodeIcon from '@mui/icons-material/Code';
import OndemandVideoIcon from '@mui/icons-material/OndemandVideo';
import SportsEsportsIcon from '@mui/icons-material/SportsEsports';
import LiveTvIcon from '@mui/icons-material/LiveTv';
import SchoolIcon from '@mui/icons-material/School';
import FaceRetouchingNaturalIcon from '@mui/icons-material/FaceRetouchingNatural';
import CheckroomIcon from '@mui/icons-material/Checkroom';
import GraphicEqIcon from '@mui/icons-material/GraphicEq';
import TheaterComedyIcon from '@mui/icons-material/TheaterComedy';
import FitnessCenterIcon from '@mui/icons-material/FitnessCenter';
import DeveloperModeIcon from '@mui/icons-material/DeveloperMode';

export const logo = 'https://i.ibb.co/s9Qys2j/logo.png';

export const categories = [
    { name: 'New', icon: <HomeIcon />, },
    { name: 'JS Mastery', icon: <CodeIcon />, },
    { name: 'Coding', icon: <CodeIcon />, },
    { name: 'ReactJS', icon: <CodeIcon />, },
    { name: 'NextJS', icon: <CodeIcon />, },
    { name: 'Music', icon: <MusicNoteIcon /> },
    { name: 'Education', icon: <SchoolIcon />, },
    { name: 'Podcast', icon: <GraphicEqIcon />, },
    { name: 'Movie', icon: <OndemandVideoIcon />, },
    { name: 'Gaming', icon: <SportsEsportsIcon />, },
    { name: 'Live', icon: <LiveTvIcon />, },
    { name: 'Sport', icon: <FitnessCenterIcon />, },
    { name: 'Fashion', icon: <CheckroomIcon />, },
    { name: 'Beauty', icon: <FaceRetouchingNaturalIcon />, },
    { name: 'Comedy', icon: <TheaterComedyIcon />, },
    { name: 'Gym', icon: <FitnessCenterIcon />, },
    { name: 'Crypto', icon: <DeveloperModeIcon />, },
];

export const demoThumbnailUrl = 'https://i.ibb.co/G2L2Gwp/API-Course.png';
export const demoChannelUrl = '/channel/UCmXmlB4-HJytD7wek0Uo97A';
export const demoVideoUrl = '/video/GDa8kZLNhJ4';
export const demoChannelTitle = 'JavaScript Mastery';
export const demoVideoTitle = 'Build and Deploy 5 JavaScript & React API Projects in 10 Hours - Full Course | RapidAPI';
export const demoProfilePicture = 'http://dergipark.org.tr/assets/app/images/buddy_sample.png'import axios from 'axios';

export const BASE_URL = 'https://youtube-v31.p.rapidapi.com';

const options = {
    params: {
        maxResults: 50,
    },
    headers: {
        'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,
        'X-RapidAPI-Host': 'youtube-v31.p.rapidapi.com',
    },
};

export const fetchFromAPI = async (url) => {
    const { data } = await axios.get(`${BASE_URL}/${url}`, options);

    return data;
};import React from "react";
import {BrowserRouter, Routes, Route} from "react-router-dom";
import {Box} from "@mui/material";

import ChannelDetail from "./components/ChannelDetail";
import Navbar from "./components/Navbar";
import Feed from "./components/Feed";
import VideoDetail from "./components/VideoDetail";
import SearchFeed from "./components/SearchFeed";


export default function App() {
    return (
        <BrowserRouter>
            <Box  sx={{ backgroundColor: '#000' }}>
                <Navbar />
                <Routes>
                    <Route exact path='/' element={<Feed />}/>
                    <Route exact path='/video/:id' element={<VideoDetail />}/>
                    <Route exact path='/channel/:id' element={<ChannelDetail />}/>
                    <Route exact path='/search/:searchTerm' element={<SearchFeed />}/>
                </Routes>
            </Box>
        </BrowserRouter>
    )
}


